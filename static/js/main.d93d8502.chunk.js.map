{"version":3,"sources":["components/Weather.js","App.js","reportWebVitals.js","index.js"],"names":["api","DataFetch","useState","weather","setWeather","current","setCurrent","query","setQuery","useEffect","fetch","then","res","json","result","console","log","type","value","placeholder","onChange","e","target","onKeyPress","key","onClick","main","name","sys","country","Math","round","temp","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAEMA,EACC,mCADDA,EAEE,2CA6DOC,MA1Df,WAAsB,IAAD,EAEYC,mBAAS,IAFrB,mBAEXC,EAFW,KAEFC,EAFE,OAGYF,mBAAS,IAHrB,mBAGXG,EAHW,KAGFC,EAHE,OAIQJ,mBAAS,YAJjB,mBAIXK,EAJW,KAIJC,EAJI,KA6BjB,OAvBAC,qBAAU,WACNC,MAAM,GAAD,OAAIV,EAAJ,qBAAyBO,EAAzB,+BAAqDP,IACzDW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJV,EAAWU,GACXC,QAAQC,IAAIF,QAEf,CAACP,IAkBA,gCACI,uBAAOU,KAAK,OACZC,MAAOb,EACPc,YAAY,qBACZC,SACI,SAACC,GACDf,EAAWe,EAAEC,OAAOJ,QAGxBK,WAnBY,SAACF,GACF,IAAXhB,GACc,UAAVgB,EAAEG,KACJhB,EAASH,MAkBX,wBAAQoB,QA3BI,WACD,IAAXpB,GACJG,EAASH,IAyBL,oBAEyB,oBAAhBF,EAAQuB,KAEb,+BAAKvB,EAAQwB,KAAb,KAAqBxB,EAAQyB,IAAIC,QAAjC,KAA4C1B,EAAQA,QAAQ,GAAGuB,KAA/D,KAAuEI,KAAKC,MAAM5B,EAAQuB,KAAKM,SAM9F,OC/CFC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d93d8502.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\n\r\nconst api = {\r\n  key: \"2ecc90681044ffa3960e4211bb4ea71d\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\nfunction DataFetch() {\r\n\r\n    const[weather, setWeather] = useState({})\r\n    const[current, setCurrent] = useState(\"\")\r\n    const[query, setQuery] = useState(\"Waterloo\")\r\n\r\n    useEffect(() => {\r\n        fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          setWeather(result);\r\n          console.log(result);\r\n            })\r\n    }, [query])\r\n\r\n    const handleClick = () => {\r\n        if (current != \"\") {\r\n        setQuery(current)\r\n        }\r\n    }\r\n\r\n    const handleEnter = (e) => {\r\n        if (current != \"\") {\r\n            if (e.key === \"Enter\") {\r\n              setQuery(current)\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n\r\n        <div>\r\n            <input type=\"text\" \r\n            value={current} \r\n            placeholder=\"Search Location...\" \r\n            onChange={\r\n                (e) => {\r\n                setCurrent(e.target.value)\r\n                }\r\n            }\r\n            onKeyPress={handleEnter}\r\n            />\r\n            <button onClick={handleClick}>Submit</button>\r\n\r\n            {(typeof weather.main != \"undefined\") ? (\r\n\r\n                <h1>{weather.name}, {weather.sys.country}, {weather.weather[0].main}, {Math.round(weather.main.temp)}</h1>\r\n\r\n                //console.log(weather.name), //Waterloo\r\n                //console.log(weather.sys.country), //Canada\r\n                //console.log(weather.weather[0].main), //Cloudy\r\n                //console.log(Math.round(weather.main.temp)) //Temp\r\n            ) : ('')}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DataFetch","import './App.css';\nimport React from \"react\"\nimport DataFetch from './components/Weather';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DataFetch />      \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}